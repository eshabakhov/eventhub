version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: eventhub_postgres
    hostname: eventhub_postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${DB_URL:-jdbc:postgresql://localhost:5432/postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_USERNAME=${DB_USER:-postgres}
    networks:
      eventhub_network:

  backend:
    image: openjdk:21
    container_name: eventhub_backend
    ports:
      - "9500:9500"
    volumes:
      - ./backend/eventhub/target/eventhub-0.0.1-SNAPSHOT.jar:/opt/app.jar
    command: java -jar -Ddb.url=jdbc:postgresql://eventhub_postgres:5432/${DB_NAME:-postgres} /opt/app.jar
    environment:
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000}
    depends_on:
      - postgres
    networks:
      eventhub_network:

  frontend:
    build:
      context: ./frontend/eventhub
      args:
        - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL:-http://localhost:9500/api}  # Передаем из .env
    ports:
      - "3000:3000"
    container_name: frontend_backend
    depends_on:
      - backend
    networks:
      eventhub_network:

  haproxy:
    build:
      context: ./haproxy
    container_name: eventhub_haproxy
    ports:
      - "443:443"
      - "8080:8080"
      - "8404:8404"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      eventhub_network:

networks:
  eventhub_network:
    name: 'eventhub_network'
