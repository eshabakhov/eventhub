spring:
  application:
    name: eventhub
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${db.url:jdbc:postgresql://localhost:5432/postgres}
    username: ${db.username:postgres}
    password: ${db.password:postgres}
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/changelog.xml
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: YOUR_GOOGLE_CLIENT_ID
            client-secret: YOUR_GOOGLE_CLIENT_SECRET
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            scope:
              - email
              - profile
            client-name: Google
          vk:
            client-id: YOUR_VK_CLIENT_ID
            client-secret: YOUR_VK_CLIENT_SECRET
            redirect-uri: "{baseUrl}/oauth2/callback/vk"
            authorization-grant-type: authorization_code
            client-authentication-method: post
            scope: email
            client-name: VK
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          vk:
            authorization-uri: https://oauth.vk.com/authorize
            token-uri: https://oauth.vk.com/access_token
            user-info-uri: https://api.vk.com/method/users.get
            user-name-attribute: response


springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

server:
  port: 9500
  servlet:
    context-path: /api

jwt:
  secret: "MySuperLongSecretKeyThatIsAtLeast32CharsMySuperLongSecretKeyThatIsAtLeast32Chars"

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}

logging:
  level:
    org.springframework.security: DEBUG